{"version":3,"sources":["utils/firebase.js","utils/customToasitfy.js","components/contacts/Contacts.js","utils/functions.js","utils/constants.js","components/form/Form.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","successToastify","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Contacts","updateFormHandler","useState","contactList","setContactList","isLoading","setIsLoading","useEffect","database","ref","on","snapshot","contacts","val","contactArray","id","push","useFetch","className","Table","size","Header","Row","HeaderCell","textAlign","Body","Cell","colSpan","length","map","item","username","toUpperCase","phoneNumber","gender","onClick","child","remove","Icon","name","options","key","text","value","FormComponent","info","setInfo","handleFormSubmit","handleInputChange","e","target","Grid","verticalAlign","Column","style","width","href","rel","Form","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","required","type","Dropdown","_","result","toLowerCase","selection","Button","color","initialState","App","preventDefault","update","editHandler","addInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.754941e1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nconst devConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\nconst prodConfig = {};\r\nconst firebaseConfig = process.env.NODE_ENV === \"development\" ? devConfig : prodConfig;\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const successToastify = (msg) => {\r\n  toast.success(msg, {\r\n    position: \"bottom-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n","import { Table, Icon } from \"semantic-ui-react\";\r\nimport { deleteHandler, useFetch } from \"../../utils/functions\";\r\n\r\nconst Contacts = ({updateFormHandler}) => {\r\n  const { contactList, isLoading } = useFetch();\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"contact-header\">Contacts</h2>\r\n      <Table size=\"large\" className=\"table\">\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell textAlign=\"center\">Username</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Phone Number</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Gender</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Delete</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Edit</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {isLoading ? (\r\n            <Table.Row>\r\n              <Table.Cell colSpan={5} textAlign=\"center\">\r\n                <p>Loading...</p>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ) : contactList?.length === 0 ? (\r\n            <Table.Row>\r\n              <Table.Cell colSpan={5} textAlign=\"center\">\r\n                <p className=\"nothing-found\">Nothing found!</p>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ) : (\r\n            contactList?.map((item) => (\r\n              <Table.Row key={item?.id}>\r\n                <Table.Cell>{item.username.toUpperCase()}</Table.Cell>\r\n                <Table.Cell>{item.phoneNumber}</Table.Cell>\r\n                <Table.Cell>{item.gender}</Table.Cell>\r\n                <Table.Cell onClick={() => deleteHandler(item.id)}>\r\n                  <Icon name=\"delete\" />\r\n                </Table.Cell>\r\n                <Table.Cell onClick = {() => updateFormHandler(item)}>\r\n                  <Icon name=\"edit\" />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))\r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import firebase from \"./firebase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { successToastify } from \"./customToasitfy\";\r\n\r\nexport const addInfo = (info) => {\r\n  const contactRef = firebase.database().ref(\"contact\");\r\n  contactRef.push(info);\r\n  successToastify(\"Added successfully\");\r\n};\r\n\r\nexport const useFetch = () => {\r\n  const [contactList, setContactList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const contactRef = firebase.database().ref(\"contact\");\r\n    contactRef.on(\"value\", (snapshot) => {\r\n      const contacts = snapshot.val();\r\n\r\n      const contactArray = [];\r\n      for (let id in contacts) {\r\n        contactArray.push({ id, ...contacts[id] });\r\n      }\r\n      setContactList(contactArray);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return { contactList, isLoading };\r\n};\r\n\r\nexport const deleteHandler = (id) => {\r\n    const contactRef = firebase.database().ref(\"contact\").child(id);\r\n    contactRef.remove();\r\n    successToastify(\"Deleted successfully\");\r\n}\r\n\r\nexport const editHandler = (info) => {\r\n    const contactRef = firebase.database().ref(\"contact\").child(info.id);\r\n    contactRef.update(info)\r\n    successToastify(\"Updated Successfully\")\r\n}","export const options = [\r\n    { key:\"m\", text:\"Male\", value:\"male\"},\r\n    { key: \"f\", text: \"Female\", value: \"female\" },\r\n    { key: \"o\", text: \"Other\", value: \"other\" },\r\n]\r\n","import { Button, Form, Grid, Segment } from \"semantic-ui-react\";\r\nimport { options } from \"../../utils/constants\";\r\nconst FormComponent = ({ info, setInfo, handleFormSubmit }) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    // const name = e.target.name;\r\n    // const value = e.target.value;\r\n    const { name, value } = e.target;\r\n    setInfo({ ...info, [name]: value.toUpperCase() });\r\n  };\r\n\r\n  const handleOptionsChange = (_, result) => {\r\n    const { name, value } = result;\r\n    setInfo({ ...info, [name]: value.toUpperCase() });\r\n  };\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n      <Grid.Column style={{ width: \"300px\" }}>\r\n        <div className=\"ui pilled segment\">\r\n          <div className=\"ui pilled brand\">\r\n            <a\r\n              href=\"https://github.com/oguzhancvdr\"\r\n              className=\"design\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <code>{\"<Roy />\"}</code>\r\n              <span className=\"design header\"> design</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <h2 className=\"contact-header\">Addd Contact</h2>\r\n        <Form size=\"large\" onSubmit={handleFormSubmit}>\r\n          <Segment stacked>\r\n            <Form.Input\r\n              fluid\r\n              name=\"username\"\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Name\"\r\n              value={info.username}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              name=\"phoneNumber\"\r\n              icon=\"phone\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Phone Number\"\r\n              type=\"text\"\r\n              value={info.phoneNumber}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n\r\n            <Form.Dropdown\r\n              options={options}\r\n              onChange={handleOptionsChange}\r\n              value={info.gender.toLowerCase()}\r\n              placeholder=\"Gender\"\r\n              name=\"gender\"\r\n              fluid\r\n              selection\r\n              required\r\n            />\r\n            <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n              {info.id ? \"Update\" : \"Add\"}\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import { useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport FormComponent from \"./components/form/Form\";\r\nimport { addInfo, editHandler } from \"./utils/functions\";\r\n\r\nconst initialState = { username: \"\", phoneNumber: \"\", gender: \"NO INFO\" };\r\n\r\nfunction App() {\r\n  const [info, setInfo] = useState(initialState);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(info?.id){\r\n      editHandler(info)\r\n    }else{\r\n      addInfo(info)\r\n    }\r\n    setInfo(initialState)\r\n  };\r\n\r\n  const updateFormHandler = (item) => {\r\n    setInfo({...item})\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <FormComponent\r\n        handleFormSubmit={handleFormSubmit}\r\n        className=\"form\"\r\n        info={info}\r\n        setInfo={setInfo}\r\n      />\r\n      <Contacts className=\"contacts\" updateFormHandler={updateFormHandler} />\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}